
services:
  frontend:
    build:
      context: ./Front
      dockerfile: Dockerfile
      args:
        - FRONT_PORT=${FRONT_PORT}
        - VITE_GOOGLE_CLIENT_ID=${VITE_GOOGLE_CLIENT_ID}
        - VITE_API_BASE_URL=${VITE_API_BASE_URL}
    volumes:
      - ./Front:/frontend
      - /frontend/node_modules
    ports:
      - "${FRONT_PORT}:${FRONT_PORT}"
    environment:
      - NODE_ENV=development
      - VITE_API_BASE_URL=${VITE_API_BASE_URL}
    depends_on:
      - backend

  backend:
    build:
      context: ./Back
      dockerfile: Dockerfile
      args:
        - BACK_PORT=${BACK_PORT}
        - FASTIFY_SECRET=${FASTIFY_SECRET}
        - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
        - API_BASE_URL=${API_BASE_URL}
    volumes:
      - ./Back:/backend
      - /backend/node_modules
    ports:
      - "${BACK_PORT}:${BACK_PORT}"
    environment:
      - NODE_ENV=development
      - FRONT_PORT=${FRONT_PORT}
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
      - API_BASE_URL=${API_BASE_URL}
    command: dev
    # NOTE: Programmatic ngrok setup in backend code is now commented out/removed. Use the ngrok service below.

  # Single ngrok service for both backend (static domain) and frontend (random domain)
  ngrok:
    image: ngrok/ngrok:latest
    volumes:
      - ./ngrok.yml:/ngrok.yml
    command: chmod +x /ngrok.yml && start --all --config /ngrok.yml --authtoken $NGROK_AUTHTOKEN
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
    depends_on:
      - backend
      - frontend
    # Check logs or ngrok dashboard for tunnel URLs
